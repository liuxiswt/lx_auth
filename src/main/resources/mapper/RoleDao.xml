<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lx.auth.mapper.RoleDao">

    <resultMap type="com.lx.auth.model.dto.Role" id="RoleMap">
        <result property="id" column="id" jdbcType="LONG INTEGER"/>
        <result property="code" column="code" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="type" column="type" jdbcType="INTEGER"/>
        <result property="level" column="level" jdbcType="INTEGER"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="createBy" column="create_by" jdbcType="LONG INTEGER"/>
        <result property="updateBy" column="update_by" jdbcType="LONG INTEGER"/>
        <result property="noDeleted" column="no_deleted" jdbcType="INTEGER"/>
        <result property="parentId" column="parent_id" jdbcType="LONG INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="RoleMap">
        select
          id, code, name, type, level, status, remark, create_time, update_time, create_by, update_by, no_deleted, parent_id
        from auth.role
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="RoleMap">
        select
          id, code, name, type, level, status, remark, create_time, update_time, create_by, update_by, no_deleted, parent_id
        from auth.role
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="RoleMap">
        select
          id, code, name, type, level, status, remark, create_time, update_time, create_by, update_by, no_deleted, parent_id
        from auth.role
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="code != null and code != ''">
                and code = #{code}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="type != null">
                and type = #{type}
            </if>
            <if test="level != null">
                and level = #{level}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="createBy != null">
                and create_by = #{createBy}
            </if>
            <if test="updateBy != null">
                and update_by = #{updateBy}
            </if>
            <if test="noDeleted != null">
                and no_deleted = #{noDeleted}
            </if>
            <if test="parentId != null">
                and parent_id = #{parentId}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into auth.role(code, name, type, level, status, remark, create_time, update_time, create_by, update_by, no_deleted, parent_id)
        values (#{code}, #{name}, #{type}, #{level}, #{status}, #{remark}, #{createTime}, #{updateTime}, #{createBy}, #{updateBy}, #{noDeleted}, #{parentId})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update auth.role
        <set>
            <if test="code != null and code != ''">
                code = #{code},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="level != null">
                level = #{level},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="noDeleted != null">
                no_deleted = #{noDeleted},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from auth.role where id = #{id}
    </delete>

</mapper>